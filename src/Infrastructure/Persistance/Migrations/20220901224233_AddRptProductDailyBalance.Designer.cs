// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OSRS.Persistance.Db;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220901224233_AddRptProductDailyBalance")]
    partial class AddRptProductDailyBalance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OSRC.Domain.Entities.DailyBalance.RptProductDailyBalance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double?>("CantFact15G")
                        .HasColumnType("float");

                    b.Property<double?>("CantFactTPA")
                        .HasColumnType("float");

                    b.Property<double?>("CantTotalFact")
                        .HasColumnType("float");

                    b.Property<double?>("CantTotalTransf")
                        .HasColumnType("float");

                    b.Property<double?>("CantTrans15G")
                        .HasColumnType("float");

                    b.Property<double?>("CantTransTPA")
                        .HasColumnType("float");

                    b.Property<short?>("IdClase")
                        .HasColumnType("smallint");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ImporteFact")
                        .HasColumnType("float");

                    b.Property<double?>("ImporteTrans")
                        .HasColumnType("float");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simbolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TipoFactura")
                        .HasColumnType("smallint");

                    b.Property<int?>("idEmpresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RptProductDailyBalances");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.DataUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("IdReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDataDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DataUpdates");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.Invoice.RptInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool?>("CantFact15G")
                        .HasColumnType("bit");

                    b.Property<double?>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double?>("CantidadCorregida")
                        .HasColumnType("float");

                    b.Property<string>("ChapaVehiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteFacturar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientePaga")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodProvinciaLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoProvincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CriterioPrecio")
                        .HasColumnType("int");

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCicloVida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoFinanciero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLiquidacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdClienteFacturar")
                        .HasColumnType("int");

                    b.Property<int?>("IdClientePaga")
                        .HasColumnType("int");

                    b.Property<string>("IdDeposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<short?>("IdEstadoCicloVida")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdEstadoFinanciero")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdEstadoPrincipal")
                        .HasColumnType("smallint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint");

                    b.Property<short?>("IdFormaTransportacion")
                        .HasColumnType("smallint");

                    b.Property<int?>("IdLugarEntrega")
                        .HasColumnType("int");

                    b.Property<string>("IdMoneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdOrganismo")
                        .HasColumnType("int");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IdSector")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdTipoFactura")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdTipoFacturacion")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdTipoVenta")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdUM")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("ImportePrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("ImporteProducto")
                        .HasColumnType("float");

                    b.Property<decimal?>("ImporteTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NoFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOperacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFormaTransportacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTipoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumeroViaje")
                        .HasColumnType("smallint");

                    b.Property<string>("Organismo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioCosto")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioEmpresa")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioFormacion")
                        .HasColumnType("float");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinciaLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiglasOrganismo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimboloUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoFacturacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptInvoices");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptA6Cancellation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Carro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Causa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chofer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptA6Cancellations");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptA6Conciliation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Carro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VolumenTPN")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RptA6Conciliations");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptClientCylinder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("LugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Piso10kg")
                        .HasColumnType("int");

                    b.Property<int>("Piso45kg")
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptClientCylinders");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptContracts");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptDailyAssembly", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("CantidadRealCargada")
                        .HasColumnType("float");

                    b.Property<double>("CapacidadTotal")
                        .HasColumnType("float");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoViaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("IdUnidadFuncional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdViaje")
                        .HasColumnType("bigint");

                    b.Property<string>("NoOperacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProvincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUnidadFuncional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroViaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RptDailyAssemblies");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptDailyOrders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaServido")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDeposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<int>("IdLugarEntrega")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProgramacion")
                        .HasColumnType("int");

                    b.Property<string>("LugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Servido")
                        .HasColumnType("float");

                    b.Property<decimal>("Solicitado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptDailyOrders");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptDistributedVolume", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Cantidad15Hl")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad15Lt")
                        .HasColumnType("float");

                    b.Property<double>("CantidadHl")
                        .HasColumnType("float");

                    b.Property<double>("CantidadLt")
                        .HasColumnType("float");

                    b.Property<int>("CantidadViajes")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<string>("NoOperacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadFuncional")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptDistributedVolumes");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptDistributionPending", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("CantidadADistribuir")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FehaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<int>("IdLugarEntrega")
                        .HasColumnType("int");

                    b.Property<long>("IdPedido")
                        .HasColumnType("bigint");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUnidadFuncional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProvincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RptDistributionPendings");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptInventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Capacidad")
                        .HasColumnType("float");

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Disponible")
                        .HasColumnType("float");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaMedicion")
                        .HasColumnType("datetime2");

                    b.Property<double>("Fondaje")
                        .HasColumnType("float");

                    b.Property<string>("IdDeposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<short>("IdEstado")
                        .HasColumnType("smallint");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IdProvincia")
                        .HasColumnType("smallint");

                    b.Property<int>("IdTanque")
                        .HasColumnType("int");

                    b.Property<double>("Inventario")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("UMCapacidad")
                        .HasColumnType("smallint");

                    b.Property<short>("UMFondaje")
                        .HasColumnType("smallint");

                    b.Property<double>("Vacio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RptInventories");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptProgramingPending", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaProgramacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdDeposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<string>("IdLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineaDistribucion")
                        .HasColumnType("int");

                    b.Property<string>("NombreLineaDistribucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLugarEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptProgramingPendings");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.RptTravelCarrier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Cantidad15")
                        .HasColumnType("float");

                    b.Property<double>("CantidadTPN")
                        .HasColumnType("float");

                    b.Property<string>("Chapa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoViaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLugarEntrega")
                        .HasColumnType("int");

                    b.Property<int>("IdTransportista")
                        .HasColumnType("int");

                    b.Property<string>("NoOperacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("NumeroViaje")
                        .HasColumnType("smallint");

                    b.Property<string>("OrigenVehiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transportista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadFuncional")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RptTravelCarriers");
                });

            modelBuilder.Entity("OSRC.Domain.Entities.Users.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("OSRC.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastLoginDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("OSRC.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("OSRC.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("OSRC.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("OSRC.Domain.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OSRC.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("OSRC.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
